language: cpp

dist: bionic

matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - COMPILER_ID=gcc GCC=5 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - COMPILER_ID=gcc GCC=6 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - COMPILER_ID=gcc GCC=7 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - COMPILER_ID=gcc GCC=7 BUILD_NATIVE=1

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - COMPILER_ID=gcc GCC=8 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - COMPILER_ID=gcc GCC=9 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
        - COMPILER_ID=gcc GCC=9 BUILD_NATIVE=1

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env:
        - COMPILER_ID=gcc GCC=10 BUILD_NATIVE=0

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env:
        - COMPILER_ID=gcc GCC=10 BUILD_NATIVE=1

    - os: linux
      arch: amd64
      compiler: clang
      env:
        - COMPILER_ID=clang BUILD_NATIVE=0

    - os: linux
      arch: amd64
      compiler: clang
      env:
        - COMPILER_ID=clang BUILD_NATIVE=1


before_install:
  - if [[ "$COMPILER_ID" == "gcc" ]]; then
      export CXX=g++-$GCC CC=gcc-$GCC;
    fi
  - FASTORPATH=$(pwd)
  - echo $FASTORPATH

install:
  # build the tests
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cat /proc/cpuinfo;
    fi
  - cd ~
  - cd $FASTORPATH/tests
  - mkdir build && cd build
  - if [[ "$BUILD_NATIVE" == 1 ]]; then
      cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_CXX_FLAGS="$(CMAKE_CXX_FLAGS) -march=native" ..;
    else
      cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..;
    fi
  -
  - make -j2

script:
  # Run the test suite
  - cd ~
  - cd $FASTORPATH/tests/build/
  - ctest -V


notifications:
  email: false